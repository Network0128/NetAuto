#Ubuntu 등을 ssh-client 로 사용 -> 라우터, 스위치를 ssh server로 사용
#Ubuntu, UbuntuDockter, NetworkAutomation에서 라우터, 스위치로 접속할 경우

sudo nano /etc/ssh/ssh_config #SSH 클라이언트측의 설정 변경 : 특정 호스트(IOSv 스위치,라우터)에 대한 키 교환 알고리즘 설정


KexAlgorithms +diffie-hellman-group1-sha1 #키 교환 알고리즘에 DH 그룹1(SHA1) 추가 : 클라이언트와 서버 사이에 안전하게 비밀키를 교환하는 방법을 정의
HostKeyAlgorithms +ssh-rsa #호스트 키 인증 알고리즘에 SSH-RSA 추가 : 서버가 클라이언트에게 자신의 신원을 증명하는 데 사용
Ciphers aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc,aes128-ctr,aes192-ctr,aes256-ctr #사용할 암호화 알고리즘: CBC(암호 블록 체인)와 CTR(카운터 모드) 모드 지원
-----------------------------------------------------------------------------------------------------------------------

KexAlgorithms : SSH 통신에서 세션 키를 교환하는 알고리즘 설정.
diffie-hellman-group1-sha1 : 오래된 방식으로 보안이 약함.

HostKeyAlgorithms : 서버가 신뢰할 수 있는 서버인가? 서버의 신원(정당성)을 확인하는 데 사용되는 알고리즘 설정.
ssh-rsa는 SHA-1 기반으로 보안이 약화됨.

차이점:
KexAlgorithms는 세션 암호화 키를 교환,
HostKeyAlgorithms는 서버 인증에 사용됨.

----------------------------------------------------------------------------------------------------------------------
<우분투를 ssh 서버로 사용할 경우 필요>
sudo apt-get install openssh-server: 자동화 수업에서는 필요 없음
/etc/ssh/sshd_config 수정: 필요 없음
sudo service ssh restart: 필요 없음

#Ubuntu를 ssh-server 로 사용 : 4세대 블로그 참고 : https://zrr.kr/zX8y
#UbuntuDocker,NetworkAutomation,KaliLinux에서 Ubuntu로 접속 할 경우 아래 설정만으로 가능

sudo apt-get update
sudo apt-get install openssh-server #OpenSSH 서버 설치

sudo nano -l /etc/ssh/sshd_config #SSH 서버 설정 변경, 아래와 같이 패스워드 인증 활성화 : 원격 사용자가 SSH를 통해 로그인할 때 패스워드를 사용할 수 있도록 한다.
PasswordAuthontication yes #57번 : 좌측 설정 주석 해제, 혹은 yes로 변경
 
sudo service ssh restart #SSH 서버 (서비스) 재시작
--------------------------------------------------------------------
#Ubuntu를 ssh-server 로 사용 : 4세대 블로그 참고 : https://zrr.kr/zX8y
#라우터, 스위치에서 Ubuntu로 접속 할 경우 아래 설정만으로 가능

root@ubuntu:~# nano /etc/ssh/sshd_config
KexAlgorithms +diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group-exchange-sha256
HostKeyAlgorithms +ssh-rsa
PubkeyAcceptedAlgorithms +ssh-rsa

PasswordAuthontication yes #57번 : 좌측 설정 주석 해제, 혹은 yes로 변경

root@ubuntu:~# systemctl restart ssh

#라우터에서 아래와 같이 접속
IOSv1#ssh -l ccnp 30.1.1.2

#7200라우터의 경우 서버 sshd_config파일에 아래 한줄 추가
Ciphers +aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------
#Ubuntu를 ssh-client 로 사용 : 라우터, 스위치를 대상으로 개별적으로 키교환 알고리즘을 설정을 할 경우

sudo nano /etc/ssh/ssh_config #SSH 클라이언트 설정 변경 : 특정 호스트(IOSv 스위치,라우터)에 대한 키 교환 알고리즘 설정

Host 10.1.1.11 #해당 호스트와의 통신에 사용할 (키 교환) 알고리즘을 설정
    KexAlgorithms +diffie-hellman-group1-sha1 #클라이언트와 서버 사이에 안전하게 비밀키를 교환하는 방법을 정의
    HostKeyAlgorithms +ssh-rsa #서버가 클라이언트에게 자신의 신원을 증명하는 데 사용
Host 10.1.1.12
    KexAlgorithms +diffie-hellman-group1-sha1
    HostKeyAlgorithms +ssh-rsa
Host 10.1.1.13
    KexAlgorithms +diffie-hellman-group1-sha1
    HostKeyAlgorithms +ssh-rsa

Host 10.1.1.21 #라우터
    KexAlgorithms +diffie-hellman-group1-sha1
    HostKeyAlgorithms +ssh-rsa

Host 192.168.0.1 #7200라우터는 아래와 같이 1줄 추가
    KexAlgorithms +diffie-hellman-group1-sha1
    HostKeyAlgorithms +ssh-rsa
    Ciphers aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc

--------------------------------------------------------------------

#Windows에서 SSH client로 설정
notepad $env:USERPROFILE\.ssh\config  -> notepad C:\Users\ljk\.ssh\config 

파일을 열거나 생성한 후, 아래와 같이 설정을 추가합니다. diffie-hellman-group1-sha1 키 교환 알고리즘과 ssh-rsa 호스트 키 알고리즘을 사용하도록 설정합니다.

Host 10.1.1.11 
    KexAlgorithms +diffie-hellman-group1-sha1 
    HostKeyAlgorithms +ssh-rsa 
Host 10.1.1.12
    KexAlgorithms +diffie-hellman-group1-sha1
    HostKeyAlgorithms +ssh-rsa
Host 10.1.1.13
    KexAlgorithms +diffie-hellman-group1-sha1
    HostKeyAlgorithms +ssh-rsa

Host 10.1.1.21 #라우터
    KexAlgorithms +diffie-hellman-group1-sha1
    HostKeyAlgorithms +ssh-rsa

Host 192.168.0.1 #7200라우터는 아래와 같이 1줄 추가
    KexAlgorithms +diffie-hellman-group1-sha1
    HostKeyAlgorithms +ssh-rsa
    Ciphers aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc








